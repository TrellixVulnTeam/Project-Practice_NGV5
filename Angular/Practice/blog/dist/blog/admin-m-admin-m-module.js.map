{"version":3,"sources":["./src/app/admin-m/admin-m.module.ts","./src/app/admin-m/admin-m-routing.module.ts","./src/app/admin-m/user-http/user-http.component.ts","./src/app/admin-m/user-http/user-http.component.html","./src/app/admin-m/list/list.component.ts","./src/app/admin-m/list/list.component.html","./src/app/admin-m/observable-testing/observable-testing.component.ts","./src/app/admin-m/observable-testing/observable-testing.component.html","./src/app/Guard/admin-g.guard.ts","./src/app/admin-m/user-form-array/user-form-array.component.ts","./src/app/admin-m/user-form-array/user-form-array.component.html","./src/app/admin-m/user/user.component.ts","./src/app/admin-m/user/user.component.html"],"names":[],"mappings":"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","file":"admin-m-admin-m-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminMRoutingModule } from './admin-m-routing.module';\nimport { UserComponent } from './user/user.component';\nimport { ListComponent } from './list/list.component';\n\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { UserFormArrayComponent } from './user-form-array/user-form-array.component';\nimport { ObservableTestingComponent } from './observable-testing/observable-testing.component';\nimport { UserHttpComponent } from './user-http/user-http.component'\n\nconsole.warn('admin m');\n\n@NgModule({\n  declarations: [UserComponent, ListComponent, UserFormArrayComponent, ObservableTestingComponent, UserHttpComponent],\n  imports: [\n    CommonModule,\n    AdminMRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n})\nexport class AdminMModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminGGuard } from '../Guard/admin-g.guard';\nimport { PageNotFoundComponent } from '../page-not-found/page-not-found.component';\nimport { ListComponent } from './list/list.component'\nimport { ObservableTestingComponent } from './observable-testing/observable-testing.component';\nimport { UserFormArrayComponent } from './user-form-array/user-form-array.component';\nimport { UserHttpComponent } from './user-http/user-http.component';\nimport { UserComponent } from './user/user.component'\nconst routes: Routes = [\n  \n    // path: 'admin-m', children: [\n    //   { path: 'list', component: ListComponent },\n    //   { path: 'user', component: UserComponent }\n    // ]\n    { path: 'list', component: ListComponent, canActivate:[AdminGGuard] },\n    { path: 'user', component: UserComponent , canActivate:[AdminGGuard]},\n    { path: 'userform', component: UserFormArrayComponent , canActivate:[AdminGGuard]},\n    { path: 'observableTesting', component: ObservableTestingComponent},\n    { path: 'httpuser', component: UserHttpComponent},\n    // { path: '**', component: ObservableTestingComponent},\n    \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminMRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\n\nimport { UserDataServiceService } from '../../Services/user-data-service.service';\n\n@Component({\n  selector: 'app-user-http',\n  templateUrl: './user-http.component.html',\n  styleUrls: ['./user-http.component.css']\n})\nexport class UserHttpComponent implements OnInit {\n\n  userForm!: FormGroup;\n\n  contactList: any;\n\n  constructor(private us: UserDataServiceService, private formBuilder: FormBuilder) {\n    this.userForm = formBuilder.group({\n      fName: [''],\n      lName: [''],\n    });\n\n\n  }\n\n  ngOnInit(): void {\n    this.GetData();\n  }\n\n  GetData() {\n    this.us.getData().subscribe(data => {\n      console.log(data);\n      this.contactList = data;\n    })\n  }\n  createData() {\n    const jBody = {\n      firstName: this.userForm.get(\"fName\")?.value,\n      lastName: this.userForm.get(\"lName\")?.value\n    };\n    this.us.createData(jBody).subscribe(data => {\n      console.log(data);\n      //this.contactList = data;\n    })\n\n\n   \n  }\n\n  updateData(id) {\n    const jBody = {\n      firstName: this.userForm.get(\"fName\")?.value,\n      lastName: this.userForm.get(\"lName\")?.value\n    };\n    this.us.updateData(id, jBody).subscribe(data => {\n      console.log(data);\n      //this.contactList = data;\n    })\n  }\n\n  deleteData(id) {\n    this.us.deleteData(id).subscribe(data => {\n      console.log(data);\n      //this.contactList = data;\n    })\n  }\n\n  \n\n\n}\n","<form [formGroup]=\"userForm\" >\n\n<table class=\"table\">\n    <tr>\n        <td>Id</td>\n        <td>first Name</td>\n        <td>last Name</td>\n    </tr>\n    <tr *ngFor=\"let item of contactList\">\n        <td>{{item.id}}</td>\n        <td>{{item.firstName}}</td>\n        <td>{{item.lastName}}</td>\n    </tr>\n</table>\n\n    <div class=\"mb-3\">\n        <label>First Name</label>\n        <input type=\"fName\" formControlName=\"fName\" class=\"form-control\">\n    </div>\n    <div class=\"mb-3\">\n        <label class=\"form-label\">Last Name</label>\n        <input type=\"lName\" formControlName=\"lName\" class=\"form-control\">\n    </div>\n\n    <button (click)=\"createData()\">Add</button>\n    <button (click)=\"updateData(1)\">Update id=1</button>\n    <button (click)=\"deleteData(2)\">Delete id=2</button>\n</form>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  componentName =\"list\";\nlistData = {\n  email:\"mukul@gmail.com\",\n  password:\"dfdfdfd\",\n  address:\"dfddf\",\n  mobile1:\"32313212\"\n}\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(data){\n    console.log(data)\n  }\nsum(a, b){\n  return a+b;\n}\n\n}\n","<p>admin list works! Template driven form</p>\n\n\n<div class=\"col-sm-6\">\n    <form #listForm=\"ngForm\" (ngSubmit)=\"onSubmit(listForm.value)\">\n        <div class=\"mb-3\">\n            <label>Email address</label>\n            <input #email=\"ngModel\" required type=\"email\" email name=\"useremail\" [ngModel]=\"listData.email\" class=\"form-control\"\n                aria-describedby=\"emailHelp\">\n            <span *ngIf=\"email.invalid && email.touched\" class=\"error\">email is invalid</span>\n        </div>\n        <div class=\"mb-3\">\n            <label class=\"form-label\">Password</label>\n            <input required minlength=\"5\" maxlength=\"7\" #password=\"ngModel\" type=\"password\" [ngModel]=\"listData.password\"  name=\"userpassword\" \n                class=\"form-control\">\n            <span *ngIf=\"password.invalid && password.touched\" class=\"error\">password is invalid</span>\n        </div>\n        <div class=\"mb-3\">\n            <label class=\"form-label\">Mobile</label>\n            <input minlength=\"8\" maxlength=\"10\" #mobile=\"ngModel\" type=\"text\" name=\"usermobile\" [ngModel]=\"listData.mobile1\" \n                class=\"form-control\">\n            <span *ngIf=\"mobile.invalid && mobile.touched\" class=\"error\">mobile is invalid</span>\n        </div>\n        <div class=\"mb-3\">\n            <label class=\"form-label\">Address</label>\n            <input pattern=\"[a-zA-Z ]*\" #address=\"ngModel\" type=\"text\" name=\"useraddress\" [ngModel]=\"listData.address\"  class=\"form-control\">\n            <span *ngIf=\"address.invalid && address.touched\" class=\"error\">address is invalid</span>\n        </div>\n\n        <button type=\"submit\" [disabled]=\"listForm.invalid\" class=\"btn btn-primary\">Submit</button>\n    </form>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-observable-testing',\n  templateUrl: './observable-testing.component.html',\n  styleUrls: ['./observable-testing.component.css']\n})\nexport class ObservableTestingComponent implements OnInit {\n  orderStatus : any;\n  data!: Observable<any>;\n  data2!: Observable<any>;\n  constructor() { \n  }\n\n  ngOnInit(): void {\n   this.data = new Observable(observer => {\n      setTimeout(() => {\n        observer.next(\"In Progress\");\n      }, 2000)\n      //logic\n      setTimeout(() => {\n        observer.next(\"In Processing\");\n      }, 4000)\n\n\n      setTimeout(() => {\n        observer.next(\"In Completed\");\n      }, 6000)\n\n\n      setTimeout(() => {\n        observer.error()\n      }, 6000)\n\n\n      setTimeout(() => {\n        observer.complete()\n      }, 6000)\n\n      setTimeout(() => {\n        observer.next(\"after complete not execute\");\n      }, 8000)\n\n\n    });\n\n    this.data.subscribe(val => {\n      this.orderStatus = val;\n    });\n\n    this.data.subscribe(val2 => {\n      //this.orderStatus = val2;\n      console.log('second subscription')\n    })\n  }\n\n}\n","<p>observable-testing works!</p>\n\n\n<p>Order status: {{orderStatus}}</p>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot):boolean{\n      //auth logic\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-form-array',\n  templateUrl: './user-form-array.component.html',\n  styleUrls: ['./user-form-array.component.css']\n})\nexport class UserFormArrayComponent implements OnInit {\n  userForm!: FormGroup;\n  // itemArr = FormArray;\n\n\n  // //bind selector\n  get email() { return this.userForm.get('email') }\n  get password() { return this.userForm.get('password') }\n\n  constructor(private formBuilder: FormBuilder) {\n    this.userForm = formBuilder.group({\n      email: ['', [Validators.required, Validators.email, Validators.minLength(5)]],\n      password: [''],\n      itemsA: this.formBuilder.array([\n        this.formBuilder.group({\n          itemId: ['1'],\n          itemName: ['namww'],\n          itemDesc: ['1'],\n          itemDone: ['', Validators.requiredTrue],\n        }),\n        this.formBuilder.group({\n          itemId: ['12'],\n          itemName: ['na2222mww'],\n          itemDesc: ['12'],\n          itemDone: ['', Validators.requiredTrue],\n        }),\n        this.formBuilder.group({\n          itemId: ['13'],\n          itemName: ['vbvbvbv'],\n          itemDesc: ['13'],\n          itemDone: [''],\n        })\n      ])\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  collectData() {\n    console.warn(this.userForm.value)\n    /*this.clearForm();*/\n  }\n  clearForm() {\n    this.userForm.reset();\n  }\n  get item(){\n    return this.userForm.get('itemsA') as FormArray;\n  }\n\n  addNewItem(){\n    const itemLength = this.item.length; \n    const newItem = this.formBuilder.group({\n      itemId: [itemLength + 1],\n      itemName: ['new added'],\n      itemDesc: ['1addedww'],\n      itemDone: [''],\n    });\n\n    this.item.push(newItem);\n  }\n\n  removeItem(itemId){\n    this.item.removeAt(itemId);\n  }\n}\n","<p>admin user- form - array- works! Reactive From</p>\n\n<div class=\"col-sm-6\">\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"collectData()\">\n        <div class=\"mb-3\">\n            <label>Email address</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\">\n            <span *ngIf=\"email?.invalid && email?.touched && email?.hasError('required')\" class=\"error\">email is\n                required</span>\n            <span *ngIf=\"email?.invalid && email?.touched && email?.hasError('email')\" class=\"error\">email is\n                invalid</span>\n            <span *ngIf=\"email?.invalid && email?.touched && email?.hasError('minlength')\" class=\"error\">email min length\n                5</span>\n        </div>\n        <div class=\"mb-3\">\n            <label class=\"form-label\">Password</label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\">\n            <span *ngIf=\"password?.invalid\" class=\"error\">password is invalid</span>\n        </div>\n\n\n        <div class=\"form-group row\">\n            <label for=\"inputRec\" class=\"col-sm-2 col-form-lable\">Items</label>\n            <div class=\"col-sm-10\" formArrayName=\"itemsA\">\n                <div *ngFor=\"let item of userForm.controls.itemsA['controls']; let i=index\" [formGroupName]=\"i\">\n                    <table>\n                        <tr>\n                            <td>  <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeItem(i);\">Remove</button></td>\n                            <td> <input class=\"form-control\" type=\"text\" formControlName=\"itemId\" id=\"taskID{{i}}\"></td>\n                            <td> <input class=\"form-control\" type=\"text\" formControlName=\"itemName\" id=\"taskID{{i}}\">\n                            </td>\n                            <td><input class=\"form-control\" type=\"text\" formControlName=\"itemDesc\" id=\"taskID{{i}}\">\n                            </td>\n                            <td><input type=\"checkbox\" formControlName=\"itemDone\"></td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"addNewItem();\">Add</button>\n        <button type=\"submit\" [disabled]=\"userForm.invalid\" class=\"btn btn-primary\">Submit</button>\n        <button type=\"button\" class=\"btn btn-link\" (click)=\"clearForm();\">Clear</button>\n    </form>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators} from '@angular/forms';\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\nuserForm= new FormGroup({\n  email: new FormControl('',[Validators.required, Validators.email,Validators.minLength(5)]),\n  password: new FormControl('')\n})\n\n//bind selector\nget email(){return this.userForm.get('email')}\nget password(){return this.userForm.get('password')}\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n    //bind values\n    /*this.userForm.setValue({\n      email: 'mkd@dfbma.com',\n      password:'ddfdfdf'\n    })*/\n    this.userForm.patchValue({\n      email: 'mkd@dfbma.com',\n      // password:'ddfdfdf'\n    })\n\n    //bind value change\n    /*this.userForm.valueChanges.subscribe(data=>{\n      console.log(data);\n    })*/\n   /* this.userForm.get('email')?.valueChanges.subscribe(data=>{\n      console.log(data);\n    })*/\n\n\n    //get status change on Form\n    this.userForm.statusChanges.subscribe(data=>{\n      console.log(data);\n    })\n    //get status change on control\n    /*this.userForm.get('email')?.statusChanges.subscribe(data=>{\n      console.log(data);\n    })*/\n  }\n\n  collectData(){\n    console.warn(this.userForm.value)\n    /*this.clearForm();*/\n  }\n  clearForm(){\n    this.userForm.reset();\n  }\n  \n\n\n}\n","<p>admin user works!   Reactive From</p>\n\n<div class=\"col-sm-6\">\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"collectData()\">\n        <div class=\"mb-3\">\n            <label>Email address</label>\n            <input  type=\"email\"  formControlName=\"email\" class=\"form-control\">\n            <span  *ngIf=\"email?.invalid && email?.touched && email?.hasError('required')\" class=\"error\">email is required</span> \n            <span  *ngIf=\"email?.invalid && email?.touched && email?.hasError('email')\" class=\"error\">email is invalid</span> \n            <span  *ngIf=\"email?.invalid && email?.touched && email?.hasError('minlength')\" class=\"error\">email min length 5</span> \n        </div>\n        <div class=\"mb-3\">\n            <label class=\"form-label\">Password</label>\n            <input  type=\"password\"  formControlName=\"password\" class=\"form-control\">\n             <span  *ngIf=\"password?.invalid\" class=\"error\">password is invalid</span>\n        </div>\n        \n\n        <button type=\"submit\" [disabled]=\"userForm.invalid\"  class=\"btn btn-primary\">Submit</button>\n        <button type=\"button\"  class=\"btn btn-link\" (click)=\"clearForm();\">Clear</button>\n    </form>\n\n</div>"],"sourceRoot":"webpack:///"}