//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ManyToMany_StudentCoursesWithData_Model", "FK__ManyToMan__Cours__04E4BC85", "ManyToManyCoursesWithData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EF_DB_First.Model.ManyToManyCoursesWithData), "ManyToManyStudentCoursesWithData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EF_DB_First.Model.ManyToManyStudentCoursesWithData), true)]
[assembly: EdmRelationshipAttribute("ManyToMany_StudentCoursesWithData_Model", "FK__ManyToMan__Stude__03F0984C", "ManyToManyStudentsWithData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EF_DB_First.Model.ManyToManyStudentsWithData), "ManyToManyStudentCoursesWithData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EF_DB_First.Model.ManyToManyStudentCoursesWithData), true)]

#endregion

namespace EF_DB_First.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ManyToMany_StudentCoursesWithData_DBContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ManyToMany_StudentCoursesWithData_DBContext object using the connection string found in the 'ManyToMany_StudentCoursesWithData_DBContext' section of the application configuration file.
        /// </summary>
        public ManyToMany_StudentCoursesWithData_DBContext() : base("name=ManyToMany_StudentCoursesWithData_DBContext", "ManyToMany_StudentCoursesWithData_DBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ManyToMany_StudentCoursesWithData_DBContext object.
        /// </summary>
        public ManyToMany_StudentCoursesWithData_DBContext(string connectionString) : base(connectionString, "ManyToMany_StudentCoursesWithData_DBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ManyToMany_StudentCoursesWithData_DBContext object.
        /// </summary>
        public ManyToMany_StudentCoursesWithData_DBContext(EntityConnection connection) : base(connection, "ManyToMany_StudentCoursesWithData_DBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManyToManyCoursesWithData> ManyToManyCoursesWithDatas
        {
            get
            {
                if ((_ManyToManyCoursesWithDatas == null))
                {
                    _ManyToManyCoursesWithDatas = base.CreateObjectSet<ManyToManyCoursesWithData>("ManyToManyCoursesWithDatas");
                }
                return _ManyToManyCoursesWithDatas;
            }
        }
        private ObjectSet<ManyToManyCoursesWithData> _ManyToManyCoursesWithDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManyToManyStudentCoursesWithData> ManyToManyStudentCoursesWithDatas
        {
            get
            {
                if ((_ManyToManyStudentCoursesWithDatas == null))
                {
                    _ManyToManyStudentCoursesWithDatas = base.CreateObjectSet<ManyToManyStudentCoursesWithData>("ManyToManyStudentCoursesWithDatas");
                }
                return _ManyToManyStudentCoursesWithDatas;
            }
        }
        private ObjectSet<ManyToManyStudentCoursesWithData> _ManyToManyStudentCoursesWithDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManyToManyStudentsWithData> ManyToManyStudentsWithDatas
        {
            get
            {
                if ((_ManyToManyStudentsWithDatas == null))
                {
                    _ManyToManyStudentsWithDatas = base.CreateObjectSet<ManyToManyStudentsWithData>("ManyToManyStudentsWithDatas");
                }
                return _ManyToManyStudentsWithDatas;
            }
        }
        private ObjectSet<ManyToManyStudentsWithData> _ManyToManyStudentsWithDatas;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManyToManyCoursesWithDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManyToManyCoursesWithDatas(ManyToManyCoursesWithData manyToManyCoursesWithData)
        {
            base.AddObject("ManyToManyCoursesWithDatas", manyToManyCoursesWithData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManyToManyStudentCoursesWithDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManyToManyStudentCoursesWithDatas(ManyToManyStudentCoursesWithData manyToManyStudentCoursesWithData)
        {
            base.AddObject("ManyToManyStudentCoursesWithDatas", manyToManyStudentCoursesWithData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManyToManyStudentsWithDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManyToManyStudentsWithDatas(ManyToManyStudentsWithData manyToManyStudentsWithData)
        {
            base.AddObject("ManyToManyStudentsWithDatas", manyToManyStudentsWithData);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManyToMany_StudentCoursesWithData_Model", Name="ManyToManyCoursesWithData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManyToManyCoursesWithData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManyToManyCoursesWithData object.
        /// </summary>
        /// <param name="courseID">Initial value of the CourseID property.</param>
        public static ManyToManyCoursesWithData CreateManyToManyCoursesWithData(global::System.Int32 courseID)
        {
            ManyToManyCoursesWithData manyToManyCoursesWithData = new ManyToManyCoursesWithData();
            manyToManyCoursesWithData.CourseID = courseID;
            return manyToManyCoursesWithData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                if (_CourseID != value)
                {
                    OnCourseIDChanging(value);
                    ReportPropertyChanging("CourseID");
                    _CourseID = StructuralObject.SetValidValue(value, "CourseID");
                    ReportPropertyChanged("CourseID");
                    OnCourseIDChanged();
                }
            }
        }
        private global::System.Int32 _CourseID;
        partial void OnCourseIDChanging(global::System.Int32 value);
        partial void OnCourseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CourseName
        {
            get
            {
                return _CourseName;
            }
            set
            {
                OnCourseNameChanging(value);
                ReportPropertyChanging("CourseName");
                _CourseName = StructuralObject.SetValidValue(value, true, "CourseName");
                ReportPropertyChanged("CourseName");
                OnCourseNameChanged();
            }
        }
        private global::System.String _CourseName;
        partial void OnCourseNameChanging(global::System.String value);
        partial void OnCourseNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManyToMany_StudentCoursesWithData_Model", "FK__ManyToMan__Cours__04E4BC85", "ManyToManyStudentCoursesWithData")]
        public EntityCollection<ManyToManyStudentCoursesWithData> ManyToManyStudentCoursesWithDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManyToManyStudentCoursesWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Cours__04E4BC85", "ManyToManyStudentCoursesWithData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManyToManyStudentCoursesWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Cours__04E4BC85", "ManyToManyStudentCoursesWithData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManyToMany_StudentCoursesWithData_Model", Name="ManyToManyStudentCoursesWithData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManyToManyStudentCoursesWithData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManyToManyStudentCoursesWithData object.
        /// </summary>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="courseID">Initial value of the CourseID property.</param>
        public static ManyToManyStudentCoursesWithData CreateManyToManyStudentCoursesWithData(global::System.Int32 studentID, global::System.Int32 courseID)
        {
            ManyToManyStudentCoursesWithData manyToManyStudentCoursesWithData = new ManyToManyStudentCoursesWithData();
            manyToManyStudentCoursesWithData.StudentID = studentID;
            manyToManyStudentCoursesWithData.CourseID = courseID;
            return manyToManyStudentCoursesWithData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                if (_StudentID != value)
                {
                    OnStudentIDChanging(value);
                    ReportPropertyChanging("StudentID");
                    _StudentID = StructuralObject.SetValidValue(value, "StudentID");
                    ReportPropertyChanged("StudentID");
                    OnStudentIDChanged();
                }
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CourseID
        {
            get
            {
                return _CourseID;
            }
            set
            {
                if (_CourseID != value)
                {
                    OnCourseIDChanging(value);
                    ReportPropertyChanging("CourseID");
                    _CourseID = StructuralObject.SetValidValue(value, "CourseID");
                    ReportPropertyChanged("CourseID");
                    OnCourseIDChanged();
                }
            }
        }
        private global::System.Int32 _CourseID;
        partial void OnCourseIDChanging(global::System.Int32 value);
        partial void OnCourseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EnrolledDate
        {
            get
            {
                return _EnrolledDate;
            }
            set
            {
                OnEnrolledDateChanging(value);
                ReportPropertyChanging("EnrolledDate");
                _EnrolledDate = StructuralObject.SetValidValue(value, "EnrolledDate");
                ReportPropertyChanged("EnrolledDate");
                OnEnrolledDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EnrolledDate;
        partial void OnEnrolledDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEnrolledDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManyToMany_StudentCoursesWithData_Model", "FK__ManyToMan__Cours__04E4BC85", "ManyToManyCoursesWithData")]
        public ManyToManyCoursesWithData ManyToManyCoursesWithData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManyToManyCoursesWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Cours__04E4BC85", "ManyToManyCoursesWithData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManyToManyCoursesWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Cours__04E4BC85", "ManyToManyCoursesWithData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ManyToManyCoursesWithData> ManyToManyCoursesWithDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManyToManyCoursesWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Cours__04E4BC85", "ManyToManyCoursesWithData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ManyToManyCoursesWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Cours__04E4BC85", "ManyToManyCoursesWithData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManyToMany_StudentCoursesWithData_Model", "FK__ManyToMan__Stude__03F0984C", "ManyToManyStudentsWithData")]
        public ManyToManyStudentsWithData ManyToManyStudentsWithData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManyToManyStudentsWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Stude__03F0984C", "ManyToManyStudentsWithData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManyToManyStudentsWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Stude__03F0984C", "ManyToManyStudentsWithData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ManyToManyStudentsWithData> ManyToManyStudentsWithDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManyToManyStudentsWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Stude__03F0984C", "ManyToManyStudentsWithData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ManyToManyStudentsWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Stude__03F0984C", "ManyToManyStudentsWithData", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManyToMany_StudentCoursesWithData_Model", Name="ManyToManyStudentsWithData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManyToManyStudentsWithData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManyToManyStudentsWithData object.
        /// </summary>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        public static ManyToManyStudentsWithData CreateManyToManyStudentsWithData(global::System.Int32 studentID)
        {
            ManyToManyStudentsWithData manyToManyStudentsWithData = new ManyToManyStudentsWithData();
            manyToManyStudentsWithData.StudentID = studentID;
            return manyToManyStudentsWithData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                if (_StudentID != value)
                {
                    OnStudentIDChanging(value);
                    ReportPropertyChanging("StudentID");
                    _StudentID = StructuralObject.SetValidValue(value, "StudentID");
                    ReportPropertyChanged("StudentID");
                    OnStudentIDChanged();
                }
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StudentName
        {
            get
            {
                return _StudentName;
            }
            set
            {
                OnStudentNameChanging(value);
                ReportPropertyChanging("StudentName");
                _StudentName = StructuralObject.SetValidValue(value, true, "StudentName");
                ReportPropertyChanged("StudentName");
                OnStudentNameChanged();
            }
        }
        private global::System.String _StudentName;
        partial void OnStudentNameChanging(global::System.String value);
        partial void OnStudentNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManyToMany_StudentCoursesWithData_Model", "FK__ManyToMan__Stude__03F0984C", "ManyToManyStudentCoursesWithData")]
        public EntityCollection<ManyToManyStudentCoursesWithData> ManyToManyStudentCoursesWithDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManyToManyStudentCoursesWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Stude__03F0984C", "ManyToManyStudentCoursesWithData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManyToManyStudentCoursesWithData>("ManyToMany_StudentCoursesWithData_Model.FK__ManyToMan__Stude__03F0984C", "ManyToManyStudentCoursesWithData", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
