//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace EF_DB_First.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Employee_StoredProcedure_DBContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Employee_StoredProcedure_DBContext object using the connection string found in the 'Employee_StoredProcedure_DBContext' section of the application configuration file.
        /// </summary>
        public Employee_StoredProcedure_DBContext() : base("name=Employee_StoredProcedure_DBContext", "Employee_StoredProcedure_DBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Employee_StoredProcedure_DBContext object.
        /// </summary>
        public Employee_StoredProcedure_DBContext(string connectionString) : base(connectionString, "Employee_StoredProcedure_DBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Employee_StoredProcedure_DBContext object.
        /// </summary>
        public Employee_StoredProcedure_DBContext(EntityConnection connection) : base(connection, "Employee_StoredProcedure_DBContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employees_StoredProcedure> Employees_StoredProcedure
        {
            get
            {
                if ((_Employees_StoredProcedure == null))
                {
                    _Employees_StoredProcedure = base.CreateObjectSet<Employees_StoredProcedure>("Employees_StoredProcedure");
                }
                return _Employees_StoredProcedure;
            }
        }
        private ObjectSet<Employees_StoredProcedure> _Employees_StoredProcedure;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees_StoredProcedure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees_StoredProcedure(Employees_StoredProcedure employees_StoredProcedure)
        {
            base.AddObject("Employees_StoredProcedure", employees_StoredProcedure);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int DeleteEmployee(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteEmployee", iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        public int DeleteEmployee_StoredProcedure(Nullable<global::System.Int32> iD)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteEmployee_StoredProcedure", iDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="salary">No Metadata Documentation available.</param>
        public int InsertEmployee(global::System.String name, global::System.String gender, Nullable<global::System.Int32> salary)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("Gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("Gender", typeof(global::System.String));
            }
    
            ObjectParameter salaryParameter;
            if (salary.HasValue)
            {
                salaryParameter = new ObjectParameter("Salary", salary);
            }
            else
            {
                salaryParameter = new ObjectParameter("Salary", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertEmployee", nameParameter, genderParameter, salaryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="salary">No Metadata Documentation available.</param>
        public int InsertEmployee_StoredProcedure(global::System.String name, global::System.String gender, Nullable<global::System.Int32> salary)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("Gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("Gender", typeof(global::System.String));
            }
    
            ObjectParameter salaryParameter;
            if (salary.HasValue)
            {
                salaryParameter = new ObjectParameter("Salary", salary);
            }
            else
            {
                salaryParameter = new ObjectParameter("Salary", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertEmployee_StoredProcedure", nameParameter, genderParameter, salaryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="salary">No Metadata Documentation available.</param>
        public int UpdateEmployee(Nullable<global::System.Int32> iD, global::System.String name, global::System.String gender, Nullable<global::System.Int32> salary)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("Gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("Gender", typeof(global::System.String));
            }
    
            ObjectParameter salaryParameter;
            if (salary.HasValue)
            {
                salaryParameter = new ObjectParameter("Salary", salary);
            }
            else
            {
                salaryParameter = new ObjectParameter("Salary", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateEmployee", iDParameter, nameParameter, genderParameter, salaryParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="iD">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="salary">No Metadata Documentation available.</param>
        public int UpdateEmployee_StoredProcedure(Nullable<global::System.Int32> iD, global::System.String name, global::System.String gender, Nullable<global::System.Int32> salary)
        {
            ObjectParameter iDParameter;
            if (iD.HasValue)
            {
                iDParameter = new ObjectParameter("ID", iD);
            }
            else
            {
                iDParameter = new ObjectParameter("ID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("Gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("Gender", typeof(global::System.String));
            }
    
            ObjectParameter salaryParameter;
            if (salary.HasValue)
            {
                salaryParameter = new ObjectParameter("Salary", salary);
            }
            else
            {
                salaryParameter = new ObjectParameter("Salary", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("UpdateEmployee_StoredProcedure", iDParameter, nameParameter, genderParameter, salaryParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Employee_StoredProcedure_Model", Name="Employees_StoredProcedure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employees_StoredProcedure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employees_StoredProcedure object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Employees_StoredProcedure CreateEmployees_StoredProcedure(global::System.Int32 id)
        {
            Employees_StoredProcedure employees_StoredProcedure = new Employees_StoredProcedure();
            employees_StoredProcedure.ID = id;
            return employees_StoredProcedure;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true, "Gender");
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Salary
        {
            get
            {
                return _Salary;
            }
            set
            {
                OnSalaryChanging(value);
                ReportPropertyChanging("Salary");
                _Salary = StructuralObject.SetValidValue(value, "Salary");
                ReportPropertyChanged("Salary");
                OnSalaryChanged();
            }
        }
        private Nullable<global::System.Int32> _Salary;
        partial void OnSalaryChanging(Nullable<global::System.Int32> value);
        partial void OnSalaryChanged();

        #endregion

    }

    #endregion

}
